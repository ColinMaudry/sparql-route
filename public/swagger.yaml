swagger: '2.0'
info:
  title: SPARQL router API
  description: >
    SPARQL router serves SPARQL query results for developers and data fanatics
    who don't know the SPARQL language.



    See more on the [README](https://github.com/ColinMaudry/sparql-router).



    [YAML](swagger.yaml) and [JSON](swagger.json) sources for this API spec,
    written with [Swagger Editor](http://editor.swagger.io/).
  version: 0.1.0
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
basePath: /
produces:
  - application/json
  - application/sparql-results+json
  - application/sparql-results+xml
  - text/csv
  - application/rdf+xml
  - text/turtle
  - application/ld+json
  - application/n-triples
paths:
  '/{queryType}/{name}{extension}':
    get:
      tags:
        - canned query
      summary: Query that returns the results of a SPARQL query. The extension determines the requested format.
      description: >
        The queries in `/tables` return tabular data, that is data in columns,
        with column headers. These results are typically returned as JSON, CSV or
        XML.



        The queries in `/graphs` return graph data, or [RDF
        triples](https://www.w3.org/TR/rdf11-primer/#section-data-model), in the
        form of `subject predicate object` statements. These results are
        typically returned as
        [Turtle](https://www.w3.org/TeamSubmission/turtle/#sec-examples),  [JSON-LD](http://json-ld.org/)
        or [RDF/XML](https://www.w3.org/TR/rdf-syntax-grammar/#section-Syntax).



        **The returned format depends on the chosen extension**. See valid
        extensions
        [here](https://github.com/ColinMaudry/sparql-router/blob/master/config/default.json).



        Examples:



        - [/tables/test.csv](/tables/test.csv)

        - [/graphs/test.ttl](/tables/test.csv)
      parameters:
        - name: queryType
          in: path
          description: Either `tables` or `graphs` depending on the type of query.
          type: string
          required: true
        - name: name
          in: path
          description: The name of the query to trigger.
          required: true
          type: string
        - name: extension
          in: path
          description: 'A valid extension to determine the format of the results. See [the supported extensions](https://github.com/ColinMaudry/sparql-router/blob/master/config/default.json).'
          required: true
          type: string
      produces:
        - application/sparql-results+json
        - application/sparql-results+xml
        - text/csv
        - application/rdf+xml
        - text/turtle
        - application/ld+json
        - application/n-triples
      responses:
        '200':
          description: The result of the SPARQL query.
          schema:
            type: string
        '400':
          description: Extension not valid.
        '404':
          description: "The query doesn't exist."
  '/{queryType}/{name}':
    get:
      summary: Query that returns the results of a SPARQL query. The Accept header determines the requested format.
      description: >
        The queries in `/tables` return tabular data, that is data in columns,
        with column headers. These results are typically returned as JSON, CSV or
        XML.



        The queries in `/graphs` return graph data, or [RDF
        triples](https://www.w3.org/TR/rdf11-primer/#section-data-model), in the
        form of `subject predicate object` statements. These results are
        typically returned as
        [Turtle](https://www.w3.org/TeamSubmission/turtle/#sec-examples),  [JSON-LD](http://json-ld.org/)
        or [RDF/XML](https://www.w3.org/TR/rdf-syntax-grammar/#section-Syntax).

        **The returned format depends on the chosen content-type**. See possible
        content-types
        [here](https://github.com/ColinMaudry/sparql-router/blob/master/config/default.json).
        
      tags:
        - canned query
      parameters:
        - name: queryType
          in: path
          description: Either `tables` or `graphs` depending on the type of query.
          type: string
          required: true
        - name: name
          in: path
          description: The name of the query to trigger.
          required: true
          type: string
        - name: Accept
          description: >
            One of the [supported
            content-types](https://github.com/ColinMaudry/sparql-router/blob/master/config/default.json).
            If `null` it will be the default content-type of the endpoint.
          in: header
          required: false
          type: string
      responses:
        '200':
          description: The results of the SPARQL query (schema only applies to `application/sparql-results+json`).
          schema:
            $ref: '#/definitions/JsonResults'
        '404':
          description: "The query doesn't exist."
        '406':
          description: The provided content-type is not valid for this type of query.
    post:
      summary: Creates a new query or updates an existing one.
      description: >-
        The new query must be passed in the body of the request.



        If you `POST` to `/tables`, the query must be
        a [SELECT](https://www.w3.org/TR/sparql11-query/#select) query and
        consequently return tabular data.



        If you `POST` to `/graphs`, the query must be
        a [CONSTRUCT](https://www.w3.org/TR/sparql11-query/#construct) or
        [DESCRIBE](https://www.w3.org/TR/sparql11-query/#describe) query and
        return a graph.
      tags:
        - canned query
      parameters:
        - name: queryType
          in: path
          description: Either `tables`, `graphs` or `update` depending on the type of query.
          type: string
          required: true
        - name: name
          in: path
          description: The name of the query to create or update.
          required: true
          type: string
        - name: query
          in: body
          description: The text of the query.
          required: true
          schema:
            $ref: '#/definitions/Query'
      consumes:
        - application/sparql-query
      responses:
        '200':
          description: 'The query was successfully **updated**.'
        '201':
          description: 'The query was successfully **created**.'
        '400':
          description: The `POST` request body is empty or the syntax of the submitted query is invalid.
        '401':
          description: The provided credientials are not valid.
        '413':
          description: The query provided is bigger than the allowed size.
        '500':
          description: Something went wrong during the creation of the query.
      security:
        - basicAuth: []
    delete:
      summary: Deletes an existing query.
      tags:
        - canned query
      parameters:
        - name: queryType
          in: path
          description: Either `tables`, `graphs` or `update` depending on the type of query.
          type: string
          required: true
        - name: name
          in: path
          description: The name of the query to delete.
          required: true
          type: string
      responses:
        '200':
          description: The query was successfully deleted.
        '404':
          description: "The specified query doesn't exist."
        '500':
          description: There was an error deleting the query.
      security:
        - basicAuth: []
  '/update/{name}':
    get:
      summary: Query that executes a SPARQL Update query.
      description: >
        The queries in `/update` execute a SPARQL Update query on the configured SPARQL endpoint. A SPARQL Update query does not return data.
        
        The HTTP status code of the response determines whether the update was successful or not.
      tags:
        - canned query
      parameters:
        - name: name
          in: path
          description: The name of the query to trigger.
          required: true
          type: string
      responses:
        '200':
          description: The update was successfully performed. The code can vary as it depends on the SPARQL endpoint configuration.
          schema:
            $ref: '#/definitions/JsonResults'
        '400':
          description: "There was an error with the executed SPARQL Update query."
      security:
        - basicAuth: []
  /sparql:
    get:
      summary: 'Sends a query directly to the configured endpoint, without using a canned query.'
      description: 'Example: [/sparql?query=select%20*%20where%20%7B%3Fs%20%3Fp%20%3Fo%7D%20limit%201](/sparql?query=select%20*%20where%20%7B%3Fs%20%3Fp%20%3Fo%7D%20limit%201), which is the URL encoded version of `select * where {?s ?p ?o} limit 1`.'
      tags:
        - passthrough query
      parameters:
        - name: query
          in: query
          description: 'The text of the query, URL encoded. SPARQL Update queries may not work depending on endpoint configuration.'
          required: true
          type: string
        - name: Accept
          in: header
          description: The content-type you want for the returned results. If `null` it will be the default content-type of the endpoint.
          type: string
          required: false
      responses:
        '200':
          description: The results of the SPARQL query.
        '400':
          description: Something is wrong with the query.
    post:
      summary: 'Sends a query directly to the configured endpoint, without using a canned query.'
      tags:
        - passthrough query
      parameters:
        - name: query
          in: body
          description: The text of the query. SPARQL Update queries may not work depending on endpoint configuration.
          required: true
          schema:
            $ref: '#/definitions/Query'
        - name: Accept
          in: header
          description: The content-type you want for the returned results. If `null` it will be the default content-type of the endpoint.
          type: string
          required: false
      consumes:
        - application/sparql-query
      responses:
        '200':
          description: The results of the SPARQL query.
        '400':
          description: Something is wrong with the query.
definitions:
  Query:
    type: string
  JsonResults:
    type: object
    properties:
      head:
        type: object
        properties:
          vars:
            type: array
            items:
              $ref: '#/definitions/QueryVariable'
      results:
        type: object
        properties:
          bindings:
            type: array
            items:
              $ref: '#/definitions/QueryBinding'
  QueryVariable:
    type: string
  QueryBinding:
    type: object
    properties:
      variableBinding:
        type: object
        properties:
          type:
            type: string
          value:
            type: string
add